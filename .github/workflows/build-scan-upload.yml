name: Upload PR Build Scans

on:
  workflow_run:
    workflows: [ "PR Build" ]
    types: [ completed ]
#  issue_comment:
#    types: [ created ]

#env:
#  PR_BUILD_WORKFLOW_FILE_NAME: build.yml

#jobs:
#  init:
#    uses: jprinet/test-gradle/.github/workflows/reusable-build-scan-upload-init.yml@v1
#    with:
#      build-workflow-filename: "build.yml"
#
#  check-terms-of-service:
#    uses: jprinet/test-gradle/.github/workflows/reusable-build-scan-upload-check-tos.yml@v1
#    needs: init
#    permissions:
#      actions: write
#      contents: write
#      pull-requests: write
#    with:
#      path-to-document: 'https://gradle.com/legal/gradle-enterprise-software-agreement/'
#      issue-owner: 'jprinet'
#      issue-repo: 'test-gradle'
#      issue-number: ${{ needs.init.outputs.build-pr }}
#    secrets: inherit

#  publish-gradle-build-scans:
#    uses: jprinet/test-gradle/.github/workflows/reusable-build-scan-upload-gradle.yml@v1
#    needs: [ init, check-terms-of-service ]
#    permissions:
#      pull-requests: write
#    with:
#      build-run-id: ${{ needs.init.outputs.build-run-id }}
#      build-pr: ${{ needs.init.outputs.build-pr }}
#    secrets:
#      GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_SOLUTIONS_ACCESS_TOKEN }}
#  publish-maven-build-scans:
#    uses: jprinet/test-gradle/.github/workflows/reusable-build-scan-upload-maven.yml@v1
#    needs: [ init, check-terms-of-service ]
#    permissions:
#      pull-requests: write
#    with:
#      build-run-id: ${{ needs.init.outputs.build-run-id }}
#      build-pr: ${{ needs.init.outputs.build-pr }}
#    secrets:
#      GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_SOLUTIONS_ACCESS_TOKEN }}
#      TOKEN: ${{ secrets.GITHUB_TOKEN }}

#jobs:
#
#  publish-maven-build-scans:
#    uses: gradle/github-actions/.github/workflows/publish-maven-build-scans.yml@v1.0
#    with:
#      gradle-enterprise-url: 'https://ge.solutions-team.gradle.com'
#      tos-workflow-name: 'gradle-check-tos'
#    secrets:
#      GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_SOLUTIONS_ACCESS_TOKEN }}
#      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:

  check-tos-approval:
    runs-on: ubuntu-latest
    steps:
      - name: Check TOS approval
        uses: gradle/github-actions/tos-check/validate@v0.4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  load-metadata:
    runs-on: ubuntu-latest
    needs: check-tos-approval
    outputs:
      extension-versions: ${{ steps.load.outputs.extension-versions }}
    steps:
      - name: Load metadata
        id: load
        uses: gradle/github-actions/maven/build-scan/load@v0.4

  publish-build-scan:
    runs-on: ubuntu-latest
    needs: load-metadata
    strategy:
      matrix:
        version: ${{ fromJson(needs.load-metadata.outputs.extension-versions) }}
    steps:
      - name: Publish Maven Build Scans
        uses: gradle/github-actions/maven/build-scan/publish@v0.4
        with:
          gradle-enterprise-url: 'https://ge.solutions-team.gradle.com'
          gradle-enterprise-extension-version: ${{ matrix.version }}
          gradle-enterprise-access-key: ${{ secrets.GE_SOLUTIONS_ACCESS_TOKEN }}
