name: PR Build - Maven

on: [ pull_request, workflow_dispatch ]

permissions:
  pull-requests: write

jobs:

  init:
    name: Init
    runs-on: windows-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup Build Scan dump capture
        uses: gradle/github-actions/maven-setup@v0.0.1
      - name: Build with Maven 0
        run: ./mvnw foo -X
      - name: Build with Maven 1
        if: always()
        run: ./mvnw clean -X
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_SOLUTIONS_ACCESS_TOKEN }}
      - name: Build with Maven 2
        if: always()
        run: ./mvnw foo -X
      - name: Build with Maven 3
        if: always()
        run: ./mvnw clean -X

  build:
    name: Build
    if: ${{ always() && !cancelled() }}
    needs: Init
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Build Scan dump capture
        uses: gradle/github-actions/maven-setup@v0.0.1
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build with Maven 1
        run: ./mvnw foo
      - name: Build with Maven 2
        if: always()
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_SOLUTIONS_ACCESS_TOKEN }}
        run: ./mvnw clean
      - name: Build with Maven 3
        if: always()
        run: ./mvnw foo

  test-matrix:
    name: test-matrix
    if: ${{ always() && !cancelled() }}
    strategy:
      matrix:
        version: [ "1.17.4", "1.17.3", "1.17.2" ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Build Scan dump capture
        uses: gradle/github-actions/maven-setup@v0.0.1
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Replace GE version
        run: |
          sed -i 's/1.18.1/${{ matrix.version}}/g' .mvn/extensions.xml
          cat .mvn/extensions.xml
          scanCount=$(find ./scan-maven-*/ -type f -name 'scan.scan' | wc -l)
      - name: Build with Maven 1
        run: mvn clean
      - name: Build with Maven 2
        run: mvn foo

  calculate-test-jobs:
    name: Calculate Test Jobs
    runs-on: ubuntu-latest
    outputs:
      jvm_matrix: ${{ steps.calc-jvm-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - name: Calculate matrix from matrix-jvm-tests.json
        id: calc-jvm-matrix
        run: |
          json=$(.github/filter-jvm-tests-json.sh)
          echo "${json}"
          echo "matrix=${json}" >> $GITHUB_OUTPUT

  test-matrix-pre-calculated:
    name: test-matrix
    if: ${{ always() && !cancelled() }}
    strategy:
      matrix: ${{ fromJson(needs.calculate-test-jobs.outputs.jvm_matrix) }}
    needs: calculate-test-jobs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Build Scan dump capture
        uses: gradle/github-actions/maven-setup@v0.0.1
      #        with:
      #          job-name: "test=matrix-${{ matrix.java.java-version }}"
      - name: Set up JDK ${{ matrix.java.java-version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java.java-version }}
          distribution: 'temurin'
      - name: Build with Maven 1
        run: mvn clean
      - name: Build with Maven 2
        run: mvn foo
